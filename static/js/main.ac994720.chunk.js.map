{"version":3,"sources":["firebase/firebase_config.js","components/common/GraficoBarras.js","types/types.js","actions/auth.js","hooks/useForm.js","components/views/auth/login/LoginScreen.js","components/views/auth/register/Register.js","routers/AuthRouter.js","assets/img/loading.gif","components/common/imgCarga/Imgcarga.js","components/common/navBar/NavBar.js","actions/uiActions.js","components/common/btnFile/BtnFile.js","components/common/inputFile/InputFile.js","actions/aeAction.js","utils/stylesTable.js","components/common/TableModelId.js","components/common/ExpandedTable.js","components/common/TableRepeat.js","components/common/TableStock.js","components/common/TableAdmin.js","components/views/home/HomeScreen.js","components/views/homeFiltro/HomeFiltro.js","actions/uifActions.js","actions/uiFiltro.js","components/common/GraficoBarrasInUse.js","components/common/GraficoBarrasMissing.js","components/common/GraficoBarrasOnOrder.js","components/common/GraficoBarrasStock.js","components/common/titulosGrafico.js/TituloGraficos.js","components/views/homeGeneral/Graficar.js","utils/shearchForState.js","components/views/homeGeneral/HomeGeneral.js","routers/HomeRouter.js","routers/AppRouter.js","reducers/personReducer.js","reducers/uiReducer.js","reducers/archivoElegidoReducer.js","reducers/archivoFiltroReducer.js","reducers/uifReducer.js","store/store.js","reducers/authReducer.js","AppAdministrador.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","myChart","googleAuthProvider","auth","GoogleAuthProvider","types","login","uid","displayName","type","payload","logout","useForm","initialState","nombre","email","password","password2","classInput","useState","values","setValues","reset","handleInputChange","e","target","name","value","isEmailValid","test","useEffect","trim","length","v","LoginScreen","dispatch","useDispatch","className","required","onChange","disabled","onClick","console","log","signInWithPopup","then","user","src","alt","to","Register","verificatedPassword","AuthRouter","exact","path","component","Imgcarga","loanding","NavBar","activeClassName","a","signOut","BtnFile","archivoSelect","handleFileLoad","id","idInput","document","getElementById","click","InputFile","useSelector","state","ae","files","dataJson","namePersonAsign","file","reader","FileReader","readAsArrayBuffer","onloadend","data","Uint8Array","result","worKbook","XLSX","read","SheetNames","forEach","sheetName","namePerson","models","codigoCiudades","formatDJson","utils","sheet_to_json","Sheets","map","element","toUpperCase","Asset","Assigned_to","Location","Manufacturer","Name","Operational_status","Serial_number","Country","Model_ID","UID_Number","User_ID","personConjunto","Set","modelConjunto","codigoCiudadCojunto","json","Array","from","codigosCity","jsonAsign","actionDataCompleta","dataUi","nombrePais","paisElegido","personasAsig","error","setData","nameAux","fileSelect","estado","paginationOpciones","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","selectAllRowsItemText","customStyles","header","style","minHeight","headRow","borderTopStyle","borderTopWidth","borderTopColor","defaultThemes","default","divider","headCells","borderRightStyle","borderRightWidth","borderRightColor","backgroundColor","rows","TableModelId","ui","amountModels","setAmountModels","downloadCSV","useCallback","array","link","createElement","csv","keys","Object","join","item","ctr","key","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","Export","onExport","actionsMemo","useMemo","modeloId","modelsCity","codigoCity","model","modelCity","filter","dataModels","Amount","padding","maxWidth","columns","selector","sortable","title","pagination","paginationComponentOptions","fixedHeader","fixedHeaderScrollHeight","actions","dense","ExpandedTable","filterOnlyStock","user_id","maquinasAsig","setMaquinasAsig","datos","dataPersona","personWithMachineOperation","noHeader","TableRepeat","paisName","dataPer","setDataPer","personasVariasCitys","setPersonasVariasCitys","contPersoRepeat","person","personsVariasCitys","cont","add","size","cont2","dato","expandableRows","expandableRowDisabled","row","expandableRowsComponent","TableStock","auxDatos","datoPerson","TableAdmin","perAsig","pe","pais","index","marginRight","changePais","HomeScreen","HomeFiltro","uif","data_filtro","setData_filtro","dataFiltro","uifd","undefined","data_asig_incorrect","elemen","pc","WKSOPS_Username","Service_Tag","toString","name_pais","serial_n","user_id_filtro","WKSOPS_LIDCode","dataUif","Chart","register","registerables","myChartInUse","GraficoBarras","namesLabels","createGrafica","ctx","destroy","labels","datasets","label","borderColor","borderWidth","options","scales","y","beginAtZero","useLayoutEffect","height","myChartMis","GraficoBarrasInUse","myChartOrder","GraficoBarrasMissing","myChartStock","GraficoBarrasOnOrder","GraficoBarrasStock","TituloGraficos","titulo","Graficar","filtro","GraficoComponent","nameLabels","numForCountry","setnumForCountry","condicion","dataPais","machinesMissing","shearchForState","HomeGeneral","namesCountrys","dataForCountry","dataPeopleVariousMachines","setDataPeopleVariousMachines","numbersPeopleWithVariousMachines","namesPersons","cont_person","userId","paisData","res","resProcentaje","Math","round","HomeRouter","AppRouter","cheking","setCheking","isLoggedIn","setIsloggedIn","onAuthStateChanged","props","intialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","AppAdministrador","ReactDOM","render"],"mappings":"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","file":"static/js/main.ac994720.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDGMhCmYdCB9b1TJEcUBUPMk_ao4HKb9po\",\r\n    authDomain: \"administrador-926be.firebaseapp.com\",\r\n    projectId: \"administrador-926be\",\r\n    storageBucket: \"administrador-926be.appspot.com\",\r\n    messagingSenderId: \"48953394743\",\r\n    appId: \"1:48953394743:web:f971e4b4e9ace56e6661b2\"\r\n  };\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}\r\n\r\n  ","import React, { useCallback, useLayoutEffect } from 'react';\r\nimport {Chart, registerables} from 'chart.js'\r\nChart.register(...registerables);\r\nlet myChart;\r\nexport const GraficoBarras = ({ data, namesLabels }) => {\r\n    const createGrafica = useCallback(\r\n        () => {\r\n            const ctx = document.getElementById('myChart');\r\n            if (typeof myChart !== \"undefined\") myChart.destroy();\r\n            myChart = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: namesLabels,\r\n                    datasets: [{\r\n                        label: 'porcentaje',\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        [data, namesLabels],\r\n    )\r\n    useLayoutEffect(() => {\r\n        createGrafica();\r\n    }, [data, createGrafica])\r\n    return (\r\n        <canvas id=\"myChart\"  height=\"150\"></canvas>\r\n    )\r\n}\r\n","export const types = {\r\n    login: '(AUTH) LOGIN',\r\n    logout: '(AUTH) LOGOUT',\r\n    data: '(UI) DATA',\r\n    cleanData: '(UI) CLEAN DATA',\r\n    personAsig: '(UI) PERSON ASIGN',\r\n    dataActual: '(UI) DATA ACTUAL',\r\n    isProcessingData: '(UI) PROCESSING DATA',\r\n    archviselect: '(AE) ARCHIVE SELECT',\r\n    cleanArchive: '(AE) CLEAN ARCHIVE ',\r\n    filtro: '(AE) FILTRO ELEGIDO',\r\n    dataUif: '(UI) DATA FILTRO'\r\n}","import {firebase, googleAuthProvider} from '../firebase/firebase_config';\r\nimport { types } from '../types/types';\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password)=>{\r\n    return (dispatch)=>{\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n            .then( ( { user } ) =>{\r\n                dispatch(login(user.uid, user.displayName));\r\n            })\r\n            .catch(e=>{\r\n                console.log(e);\r\n            })\r\n    }\r\n}\r\n\r\nexport const startLoginGoogle = ()=>{\r\n   return (dispatch)=>{\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n        .then( ({ user })=>{\r\n            // console.log(us)\r\n            dispatch(login(user.uid, user.displayName));\r\n        } )\r\n   }\r\n}\r\n\r\nexport const login = (uid, displayName)=>{\r\n    return {\r\n        type: types.login,\r\n        payload:{\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = ()=>{\r\n    return async (dispatch)=>{\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const logout = ()=>{\r\n    return{\r\n        type: types.logout\r\n    }\r\n}","import { useState, useEffect } from 'react'\r\n\r\nexport const useForm = ( initialState = {\r\n    nombre:'',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n    classInput: '',\r\n}) => {\r\n    const [values, setValues] = useState(initialState);\r\n    const reset = ()=>{\r\n        setValues( initialState );\r\n    }\r\n    const handleInputChange = (e)=>{\r\n        setValues({\r\n            ...values,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const isEmailValid = (email)=>{\r\n        \r\n        // const regex = /^(([^<>()[\\]\\\\.,;:\\s@]+(\\.[^<>()[\\]\\\\.,;:\\s@]+)*)|(.+))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        const regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\r\n        return regex.test(email);\r\n    }\r\n\r\n    \r\n    useEffect(()=>{\r\n        if(values.email.trim().length !== 0) {\r\n            if(isEmailValid(values.email)){\r\n                setValues(v => {\r\n                    return{\r\n                        ...v,\r\n                        classInput: 'text-flied-correct'\r\n                    }\r\n                })\r\n            }else{\r\n                setValues(v => {\r\n                    return{\r\n                        ...v,\r\n                        classInput: 'text-flied-incorrect'\r\n                    }\r\n                })\r\n            }\r\n        }\r\n        // else{\r\n        //     setValues(v => {\r\n        //         return{\r\n        //             ...v,\r\n        //             classInput: ''\r\n        //         }\r\n        //     })\r\n        // }\r\n    },[values.email]);\r\n    return [values,handleInputChange,reset];\r\n}\r\n","import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { startLoginGoogle } from '../../../../actions/auth';\r\n\r\nimport { useForm } from '../../../../hooks/useForm';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [values,handleInputChange] = useForm();\r\n    const { email, password, classInput } = values;\r\n    \r\n    const handleGoogleLogin = ()=>{\r\n        console.log('google login');\r\n        dispatch( startLoginGoogle() );\r\n    }\r\n    return (\r\n        <div className=\"cont-screen-login\">\r\n            <div className=\"cont-form\">\r\n                <h1>Iniciar sesión</h1>\r\n                <form>\r\n                    <div className={`text-field ${ classInput }`}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            className=\"form-controlD\"\r\n                            required\r\n                            value={ email }\r\n                            onChange={ handleInputChange }\r\n                        />  \r\n                        <label>Email</label>\r\n                        {\r\n                            (classInput === \"text-flied-incorrect\")\r\n                            ? <p className=\"adver\">Ingrese un correo valido</p>\r\n                            : <p></p> \r\n                        }\r\n                    </div>\r\n                    <div className={\"text-field text-flied-password \"}>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-controlD\"\r\n                            required\r\n                            value={ password }\r\n                            onChange={ handleInputChange }\r\n                        />  \r\n                        <label>Contraseña</label>\r\n                    </div>\r\n                   \r\n                    <button \r\n                        className=\"btn btn-primary \" \r\n                        disabled=\r\n                        { \r\n                            ( classInput === 'text-flied-correct' && password.trim().length > 0 )\r\n                            ? \"\" \r\n                            : \"disabled\"\r\n                        }\r\n                    > \r\n                        Iniciar\r\n                    </button>\r\n                    <div className=\"auth__social-networks\">\r\n                        <p>O</p>\r\n\r\n                        <div \r\n                            className=\"google-btn\"\r\n                            onClick={ handleGoogleLogin }\r\n                        >\r\n                            <div className=\"google-icon-wrapper\">\r\n                                <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                            </div>\r\n                            <p className=\"btn-text\">\r\n                                <b>Ingresar con google</b>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <Link \r\n                        to=\"/auth/register\"\r\n                        className=\"link\"\r\n                    >\r\n                        Crear una nueva cuenta  \r\n                    </Link>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { useForm } from '../../../../hooks/useForm';\r\n\r\nexport const Register = () => {\r\n    const [values,handleInputChange] = useForm();\r\n    const { \r\n        nombre,\r\n        email, \r\n        password, \r\n        password2, \r\n        classInput, \r\n    } = values;\r\n    const isDisableBtnResgistrar = ()=>{\r\n        if(classInput === 'text-flied-correct' && password.trim().length > 0 && nombre.trim().length > 0 && password2 === password)\r\n            return true;\r\n        else\r\n            return false;\r\n        \r\n    }\r\n    const verificatedPassword = ()=>{\r\n        if( password.trim().length > 0 && password2.trim().length > 0){\r\n            if( password2 === password)\r\n                return 'text-flied-correct';\r\n            else\r\n                return 'text-flied-incorrect';\r\n        }else{\r\n            return 'text-flied-password'\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className=\"cont-screen-login\">\r\n            <div className=\"cont-form\">\r\n                <h1>Registrarse</h1>\r\n                <form>\r\n                    <div className={\"text-field text-flied-password \"}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"nombre\"\r\n                            className=\"form-controlD\"\r\n                            required\r\n                            value={ nombre }\r\n                            onChange={ handleInputChange }\r\n                        />  \r\n                        <label>Nombre</label>\r\n                    </div>\r\n                    <div className={`text-field ${ classInput }`}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            className=\"form-controlD\"\r\n                            required\r\n                            value={ email }\r\n                            onChange={ handleInputChange }\r\n                        />  \r\n                        <label>Email</label>\r\n                        {\r\n                            (classInput === \"text-flied-incorrect\")\r\n                            ? <p className=\"adver\">Ingrese un correo valido</p>\r\n                            : <p></p> \r\n                        }\r\n                    </div>\r\n                    <div className={\"text-field text-flied-password \"}>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            className=\"form-controlD\"\r\n                            required\r\n                            value={ password }\r\n                            onChange={ handleInputChange }\r\n                        />  \r\n                        <label>Contraseña</label>\r\n                    </div>\r\n                   \r\n                    <div className= {`text-field ${ verificatedPassword() }`}>\r\n                        <input\r\n                            type=\"password\"\r\n                            name=\"password2\"\r\n                            className=\"form-controlD\"\r\n                            required\r\n                            value={ password2 }\r\n                            onChange={ handleInputChange }\r\n                        />  \r\n                        <label>Confirmar contraseña</label>\r\n                        {\r\n                            (verificatedPassword() === 'text-flied-incorrect')\r\n                            ? <p className=\"adver\">Contraseñas no coinciden</p>\r\n                            : <p></p> \r\n                        }\r\n                    </div>\r\n                   \r\n                    <button \r\n                        className=\"btn btn-primary \" \r\n                        disabled=\r\n                        { \r\n                            (isDisableBtnResgistrar())\r\n                            ? \"\" \r\n                            : \"disabled\"\r\n                        }\r\n                    > \r\n                        Registrar\r\n                    </button>\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\n\r\nimport { LoginScreen } from '../components/views/auth/login/LoginScreen'\r\nimport { Register } from '../components/views/auth/register/Register'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={ LoginScreen }/>\r\n                <Route exact path=\"/auth/register\" component={ Register }/>\r\n                <Redirect to=\"/auth/login\"/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.c48129ad.gif\";","import React from 'react';\r\n\r\nimport loanding from '../../../assets/img/loading.gif';\r\nimport './imgCarga.css';\r\n\r\nexport const Imgcarga = () => {\r\n    return (\r\n        <div className=\"cont-img-carga\">\r\n             <img src={ loanding} alt=\"gif\"></img>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './navBar.css';\r\nimport { startLogout } from '../../../actions/auth';\r\nimport { cleanData } from '../../../actions/uiActions';\r\n\r\nexport const NavBar = () => {\r\n    const dispatch= useDispatch();\r\n    const logoutApp = ()=>{\r\n        dispatch(startLogout());\r\n        dispatch(cleanData());\r\n    }\r\n    return (\r\n        <nav className=\"cont-nav\">\r\n            \r\n            <NavLink\r\n                activeClassName='noActive' \r\n                className=\"nav-link-admi\"\r\n                to=\"/home/paises\"\r\n            >\r\n                Reportes\r\n            </NavLink>\r\n\r\n            <div className=\"cont-links\">\r\n                \r\n\r\n                    <NavLink \r\n                        activeClassName='active'\r\n                        className={`nav-link-admi`} \r\n                        exact\r\n                        to=\"/home/paises\"\r\n                    >\r\n                        países\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className={`nav-link-admi `} \r\n                        exact\r\n                        to=\"/home/general\"\r\n                    >\r\n                        general\r\n                    </NavLink>\r\n\r\n                    <NavLink \r\n                        activeClassName=\"active\"\r\n                        className={`nav-link-admi `} \r\n                        exact\r\n                        to=\"/home/filtro\"\r\n                    >\r\n                        filtro\r\n                    </NavLink>\r\n\r\n                     <NavLink \r\n                        activeClassName=\"active\"\r\n                        className=\"nav-link-admi\" \r\n                        exact\r\n                        onClick={ logoutApp }\r\n                        to=\"/login\"\r\n                    >\r\n                        salir\r\n                    </NavLink>\r\n               \r\n            </div>\r\n\r\n        </nav>\r\n    )\r\n}\r\n","\r\nimport XLSX from 'xlsx';\r\nimport { types } from \"../types/types\";\r\n//-- Acquisition method: \"Purchase\"\r\n//-- Asset: \"J0RLL32 - Dell LATITUDE E7440 E7440\" \r\n//-- Assigned to: \"Santiago Malca\"\r\n//-- Country: \"Peru\"\r\n//-- Critical: false\r\n//-- Form factor: \"Laptop\"\r\n//-- Function: \"Dedicated\"\r\n//-- Installed: 42204.083333333336\r\n//-- Last Logged In User: \"H118830\"\r\n//-- Location: \"PU02\"\r\n//-- Manufacturer: \"Dell\"\r\n//-- Model ID: \"Dell LATITUDE E7440 E7440\"\r\n//-- Name: \"PU02LTJ0RLL32\"\r\n//-- Region: \"CANLA\"\r\n//-- Serial number: \"J0RLL32\"\r\n//-- State: \"Retired\"  Operational_status\r\n//-- Substate: \"disposed\"  Substatus\r\n// Support Vendor: \"HON CORP\"\r\n//-- Support group: \"Site Desktop Support (CANLA:CI08 / CI12)\"\r\n//-- UID_Number: \"4b0ab589dbf6c30050afd7795e9619ab\"\r\n//-- Updated: 44271.54759259259\r\n//-- Updated by: \"admin\"\r\n// User ID: \"H118830\"\r\nexport const setData=(e)=>{\r\n        return async (dispatch)=>{\r\n            let dataJson = [];\r\n            let namePersonAsign = [];\r\n\r\n            try {\r\n                let file = e.target.files[0];\r\n                let reader = new FileReader();\r\n                reader.readAsArrayBuffer(file);\r\n                reader.onloadend = (e)=>{\r\n                    const data  = new Uint8Array(e.target.result);\r\n                    const worKbook =  XLSX.read(data, {type: \"array\"});\r\n                    worKbook.SheetNames.forEach((sheetName)=>{\r\n                        let namePerson = [];\r\n                        let models = [];\r\n                        let codigoCiudades = [];\r\n                        const dJson = XLSX.utils.sheet_to_json(worKbook.Sheets[sheetName]);\r\n                        const formatDJson = dJson.map((element)=>{\r\n                            if(element['Assigned to'] !== '') namePerson = [...namePerson,element['User ID']];\r\n                            if(element['Model ID'] !== '') models = [...models, element['Model ID'].toUpperCase()];\r\n                            if(element['Location'] !== '') codigoCiudades = [...codigoCiudades, element['Location']];\r\n                            return {\r\n                                Asset: element['Asset'],\r\n                                Assigned_to: element['Assigned to'],\r\n                                Location: element['Location'],\r\n                                Manufacturer: element['Manufacturer'],\r\n                                Name: element['Name'],\r\n                                Operational_status: element['State'],\r\n                                // Schedule: element['Schedule'],\r\n                                Serial_number: element['Serial number'],\r\n                                //Substatus:element['Substate'],\r\n                                //Support_group: element['Support group'],\r\n                                //Acquisition_method: element['Acquisition method'],\r\n                                Country: element['Country'],\r\n                                //Form_factor: element['Form factor'],\r\n                                //Function: element['Function'],\r\n                                //Installed: element['Installed'],\r\n                                //Last_Logged_In_User: element['Last Logged In User'],\r\n                                Model_ID: element['Model ID'].toUpperCase(),\r\n                                //Region: element['Region'],\r\n                                UID_Number: element['UID_Number'],\r\n                                // Updated: element['Updated'],\r\n                                // Updated_by: element['Updated by'],\r\n                                User_ID: element['User ID']\r\n                            }\r\n                        });\r\n                        let personConjunto = new Set(namePerson);\r\n                        let modelConjunto = new Set(models);\r\n                        let codigoCiudadCojunto = new Set(codigoCiudades);\r\n                        const json = {\r\n                            sheetName,\r\n                            data: formatDJson,\r\n                            models: Array.from(modelConjunto),\r\n                            codigosCity: Array.from(codigoCiudadCojunto)\r\n                        }\r\n                        dataJson = [...dataJson,json];\r\n                        \r\n                        const jsonAsign = {\r\n                            sheetName,\r\n                            data: Array.from(personConjunto)\r\n                        }\r\n                        namePersonAsign = [...namePersonAsign,jsonAsign];\r\n\r\n                    })\r\n                    const actionDataCompleta = {\r\n                        type: types.data,\r\n                        payload: {\r\n                            data: {\r\n                                dataUi:dataJson,\r\n                                nombrePais: dataJson[0]['sheetName'],\r\n                                paisElegido: dataJson[0]['data'],\r\n                                personasAsig: namePersonAsign[0]['data']\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch(actionDataCompleta);\r\n                    const actionPersonAsign = {\r\n                        type: types.personAsig,\r\n                        payload: {\r\n                            data: namePersonAsign\r\n                        }\r\n                    }\r\n                    dispatch(actionPersonAsign);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n}\r\n\r\nexport const cleanData= ()=>{\r\n    return async(dispatch)=>{\r\n        const actioClean = {\r\n            type: types.cleanData,\r\n        }\r\n        dispatch(actioClean)\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport './btnFile.css';\r\n\r\nexport const BtnFile = ({archivoSelect, handleFileLoad}) => {\r\n    const getFile = (idInput)=>{\r\n        document.getElementById(idInput).click();\r\n    }\r\n    return (\r\n        <div className=\"cont-archivos\" id=\"2\">\r\n            <div  className='cont-input-if'>\r\n                <div className=\"cont-rnp\">\r\n                    <div>\r\n                        <p className='nombre-archivoSelect-if'>{ archivoSelect['nombre'] }</p>\r\n                    </div>\r\n                    <div className=\"inputFile-if\">\r\n                        <input id=\"upfile2\" type=\"file\" onChange={ handleFileLoad }/>\r\n                    </div>\r\n                    <div \r\n                        className={`file2 ${archivoSelect['fileSelect']} labelArchivo`}  \r\n                        id=\"input2\" \r\n                        onClick={() => getFile('upfile2')}\r\n                    >\r\n                        { archivoSelect['estado'] }\r\n                    </div>\r\n                    \r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectArchive } from '../../../actions/aeAction';\r\n\r\nimport { setData } from '../../../actions/uiActions';\r\nimport { BtnFile } from '../btnFile/BtnFile';\r\n\r\n\r\nexport const InputFile = () => {\r\n    const archivoSelect = useSelector(state => state.ae);\r\n    const dispatch= useDispatch();\r\n    const handleFileLoad = (e)=>{\r\n        if (e.target.files.length > 0) {\r\n            dispatch(setData(e));\r\n            const nameAux = e.target.files[0].name;\r\n            dispatch(selectArchive(nameAux, '','cambiar archivo'));\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <BtnFile \r\n                archivoSelect = {archivoSelect}\r\n                handleFileLoad = {handleFileLoad}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const selectArchive=(nombre, fileSelect, estado)=>{\r\n    return async(dispatch)=>{\r\n        const actionSelectArchive ={\r\n            type: types.archviselect,\r\n            payload: {\r\n                data: {\r\n                    nombre,\r\n                    fileSelect,\r\n                    estado\r\n                }\r\n            }\r\n        }\r\n        dispatch(actionSelectArchive);\r\n    }\r\n}","\r\nimport { defaultThemes } from 'react-data-table-component';\r\n\r\nexport const paginationOpciones = {\r\n    rowsPerPageText: 'Filas por Página',\r\n    rangeSeparatorText: 'de',\r\n    selectAllRowsItem: true,\r\n    selectAllRowsItemText: 'Todos'\r\n}\r\nexport const customStyles = {\r\n        header: {\r\n            style: {\r\n            minHeight: '56px',\r\n            },\r\n        },\r\n        headRow: {\r\n            style: {\r\n            borderTopStyle: 'solid',\r\n            borderTopWidth: '1px',\r\n            borderTopColor: defaultThemes.default.divider.default,  \r\n            },\r\n        },\r\n        headCells: {\r\n            style: {\r\n            // '&:not(:last-of-type)': {\r\n                borderRightStyle: 'solid',\r\n                borderRightWidth: '1px',\r\n                borderRightColor: defaultThemes.default.divider.default,\r\n                backgroundColor: 'rgba(207, 206, 205, 0.9)',\r\n            // },\r\n            },\r\n        },\r\n        // cells: {\r\n        //     style: {\r\n                \r\n        //     '&:not(:last-of-type)': {\r\n        //         // '&:nth-of-type(odd)':{\r\n        //         borderRightStyle: 'solid',\r\n        //         borderRightWidth: '1px',\r\n        //         borderRightColor: defaultThemes.default.divider.default,\r\n        //         backgroundColor: 'rgba(193, 217, 249, 0.9)',\r\n        //         // columns={columns}\r\n        //         // columns={columns}\r\n        //     },\r\n        //     },\r\n        // },\r\n        rows: {\r\n            style:{\r\n        //     '&:not(:last-of-type)': {\r\n                '&:nth-of-type(odd)':{\r\n                    borderRightStyle: 'solid',\r\n                    borderRightWidth: '1px',\r\n                    borderRightColor: defaultThemes.default.divider.default,\r\n                    backgroundColor: 'rgba(220, 233, 250, 0.5)',\r\n                }               \r\n            }\r\n        }\r\n};","import React, { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { customStyles, paginationOpciones } from '../../utils/stylesTable';\r\n\r\nexport const TableModelId = () => {\r\n    const {dataUi,paisElegido,nombrePais} = useSelector(state => state.ui);\r\n    const [amountModels, setAmountModels] = useState([]);\r\n\r\n    const convertArrayOfObjectsToCSV = (data)=>{\r\n        let result;\r\n        const columnDelimiter = ',';\r\n        const lineDelimiter = '\\n';\r\n        const keys = Object.keys(data[0]);\r\n        \r\n        result = '';\r\n        result += keys.join(columnDelimiter);\r\n        result += lineDelimiter;\r\n        \r\n        data.forEach(item => {\r\n            let ctr = 0;\r\n            keys.forEach(key => {\r\n                if (ctr > 0) result += columnDelimiter;\r\n                \r\n                result += item[key];\r\n                \r\n                ctr++;\r\n            });\r\n            result += lineDelimiter;\r\n        });\r\n        return result;\r\n    }\r\n    const downloadCSV = useCallback(\r\n        (array) => {\r\n            const link = document.createElement('a');\r\n            let csv = convertArrayOfObjectsToCSV(array);\r\n            if (csv == null) return;\r\n        \r\n            const filename = 'export.csv';\r\n        \r\n            if (!csv.match(/^data:text\\/csv/i)) {\r\n                csv = `data:text/csv;charset=utf-8,${csv}`;\r\n            }\r\n        \r\n            link.setAttribute('href', encodeURI(csv));\r\n            link.setAttribute('download', filename);\r\n            link.click();\r\n        },\r\n        [],\r\n    )\r\n    const Export = ({ onExport }) => <button onClick={e => onExport(e.target.value)}>Export</button>;\r\n    const actionsMemo = useMemo(() => <Export onExport={() => downloadCSV(amountModels)} />, [amountModels,downloadCSV]);\r\n\r\n    const modeloId = useCallback(\r\n        () => {\r\n            let modelsCity  = [];\r\n            dataUi.forEach(element => {\r\n                if(element['sheetName'] === nombrePais){\r\n                    element['codigosCity'].forEach(codigoCity => {\r\n                        element['models'].forEach(model => {\r\n                            const modelCity = paisElegido.filter(({Model_ID, Location,  Operational_status})=> Model_ID === model && Location === codigoCity && Operational_status === 'In stock')\r\n                            if (modelCity.length !== 0){\r\n                                const dataModels= {\r\n                                    Location: codigoCity,\r\n                                    Model_ID: model,\r\n                                    Amount: modelCity.length\r\n                                }\r\n                                modelsCity = [...modelsCity, dataModels];\r\n                            } \r\n                        })\r\n                    })\r\n                }\r\n            });\r\n            setAmountModels(modelsCity);\r\n        },\r\n        [dataUi,paisElegido,nombrePais],\r\n    ) \r\n    useEffect(() => {\r\n        modeloId();\r\n        \r\n    }, [modeloId]);\r\n    const columns = [\r\n        {\r\n            name: 'Model ID',\r\n            selector:'Model_ID',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Código ciudad',\r\n            selector:'Location',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Número de PCS',\r\n            selector:'Amount',\r\n            sortable: true,\r\n        },\r\n       \r\n       \r\n    ] \r\n    return (\r\n        <div className=\"row cont-table-repeat\">\r\n             {\r\n                    (amountModels.length !== 0)\r\n                    ?  <div className=\"table-responsive table-repeat\" style={{padding:\"10px\", maxWidth:\"600px\"}}>\r\n                                <DataTable\r\n                                    columns={ columns }\r\n                                    data = { amountModels }\r\n                                    title='Cantidad de modelos de máquinas en stock'\r\n                                    pagination\r\n                                    paginationComponentOptions={ paginationOpciones }\r\n                                    fixedHeader\r\n                                    fixedHeaderScrollHeight='600px'\r\n                                    customStyles={customStyles}\r\n                                    actions={actionsMemo}\r\n                                    dense\r\n                                />\r\n                        </div>\r\n                    : <div></div>   \r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { customStyles, paginationOpciones } from '../../utils/stylesTable';\r\n\r\nexport const ExpandedTable = ({data, filterOnlyStock}) => {\r\n    const { user_id, Location } = data;\r\n    const { paisElegido } = useSelector(state => state.ui);\r\n    const [maquinasAsig, setMaquinasAsig] = useState([]);\r\n    useEffect(() => {\r\n        if(paisElegido.length !== 0) {\r\n            const datos = paisElegido.filter(dataPersona => dataPersona.User_ID === user_id && dataPersona.Location === Location );\r\n            if(filterOnlyStock){\r\n                const personWithMachineOperation = datos.filter(dataPersona => dataPersona.Operational_status === 'In stock' )\r\n                setMaquinasAsig(personWithMachineOperation)\r\n            }else{\r\n                const personWithMachineOperation = datos.filter(dataPersona => dataPersona.Operational_status ==='In use' || dataPersona.Operational_status === 'In stock' )\r\n                setMaquinasAsig(personWithMachineOperation)\r\n            }\r\n        }\r\n    }, [paisElegido, Location, user_id,filterOnlyStock])\r\n    const columns = [\r\n        {\r\n            name: 'Número de Serie',\r\n            selector:'Serial_number',\r\n            sortable: true,\r\n           \r\n        },\r\n        {\r\n            name: 'Estado',\r\n            selector:'Operational_status',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Modelo',\r\n            selector:'Model_ID',\r\n            sortable: true,\r\n        },\r\n    ]\r\n    return (\r\n        <div>\r\n              {\r\n                    (maquinasAsig.length !== 0)\r\n                    ?  <div className=\"table-responsive table-expanded\" >\r\n                                <DataTable\r\n                                    columns={ columns }\r\n                                    data = { maquinasAsig }\r\n                                    noHeader\r\n                                    pagination\r\n                                    paginationComponentOptions={ paginationOpciones }\r\n                                    fixedHeader\r\n                                    fixedHeaderScrollHeight='600px'\r\n                                    customStyles={customStyles}\r\n                                    dense\r\n                                />\r\n                        </div>\r\n                    : <div></div>   \r\n                }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { customStyles, paginationOpciones } from '../../utils/stylesTable';\r\nimport { ExpandedTable } from './ExpandedTable';\r\n\r\n\r\n\r\nexport const TableRepeat = ({paisName=''}) => {\r\n    // const personAsig = useSelector(state => state.pe);\r\n    const { paisElegido, personasAsig}= useSelector(state => state.ui);\r\n    const [dataPer, setDataPer] = useState([]);\r\n    const [personasVariasCitys, setPersonasVariasCitys] = useState([]);\r\n    \r\n    const contPersoRepeat = useCallback(\r\n        ()=>{\r\n            let person = [];\r\n            let personsVariasCitys = [];\r\n            personasAsig.forEach((user_id)=>{\r\n                let cont = 0;\r\n                let codigosCity = new Set();\r\n                let name = '';\r\n                paisElegido.forEach((data)=>{\r\n                    if(data['User_ID'] === user_id && (data['Operational_status'] === 'In use' || data['Operational_status'] === 'In stock')){\r\n                        name = data['Assigned_to'];\r\n                        codigosCity.add(data['Location'])                    \r\n                        cont = cont +1;\r\n                    }\r\n                })\r\n                if(cont > 1){\r\n                    if(codigosCity.size > 1){\r\n                        for(let codigoCity of codigosCity){\r\n                            let cont2 = 0;\r\n                            paisElegido.forEach((data)=>{\r\n                                if(data['User_ID'] === user_id && data['Location'] === codigoCity && (data['Operational_status'] === 'In use' || data['Operational_status'] === 'In stock' )){              \r\n                                    cont2 = cont2 +1;\r\n                                }\r\n                            })\r\n                            const dato = {\r\n                                cont: cont2,\r\n                                name,\r\n                                user_id,\r\n                                Location: codigoCity,         \r\n                            }\r\n                            personsVariasCitys = [...personsVariasCitys, dato]\r\n                        }\r\n                    }else{\r\n                        const dato = {\r\n                            cont,\r\n                            name,\r\n                            user_id,\r\n                            Location: Array.from(codigosCity)[0],\r\n                        }\r\n                        person = [...person,dato]\r\n                    }\r\n                } \r\n            })\r\n            setDataPer(person);\r\n            setPersonasVariasCitys(personsVariasCitys);\r\n            // console.log(person)\r\n        },\r\n        [paisElegido, personasAsig],\r\n    )\r\n    \r\n    const filter = useCallback(\r\n        () => {\r\n            if(paisElegido.length !== 0){\r\n                contPersoRepeat();\r\n            }\r\n        },\r\n        [paisElegido,contPersoRepeat],\r\n    )\r\n    useEffect(() => {\r\n        filter();\r\n    }, [paisName,filter]);\r\n    const columns = [\r\n        {\r\n            name: 'Número de PCS',\r\n            selector:'cont',\r\n            sortable: true,\r\n            // maxWidth: \"100px\"\r\n        },\r\n        {\r\n            name: 'User id',\r\n            selector:'user_id',\r\n            sortable: true,\r\n            // maxWidth: \"100px\"\r\n        },\r\n        {\r\n            name: 'Nombre',\r\n            selector:'name',\r\n            sortable: true,\r\n            // maxWidth: \"100px\"\r\n        },\r\n        {\r\n            name: 'Código ciudad',\r\n            selector:'Location',\r\n            sortable: true,\r\n            // maxWidth: \"100px\"\r\n        },\r\n        // {\r\n        //     name: 'Estado',\r\n        //     selector:'Operational_status',\r\n        //     sortable: true,\r\n        //     // maxWidth: \"100px\"\r\n        // },\r\n    ]\r\n    return (\r\n        <>  \r\n            <div className=\"row cont-table-repeat\">\r\n                {/* <div className=\"col-6\"> */}\r\n                {\r\n                    (dataPer.length !== 0)\r\n                    ?  <div className=\"table-responsive table-repeat\" style={{padding:\"10px\", maxWidth:\"600px\"}}>\r\n                                <DataTable\r\n                                    columns={ columns }\r\n                                    data = { dataPer }\r\n                                    title='Máquinas asignadas'\r\n                                    pagination\r\n                                    paginationComponentOptions={ paginationOpciones }\r\n                                    fixedHeader\r\n                                    fixedHeaderScrollHeight='600px'\r\n                                    customStyles={customStyles}\r\n                                    dense\r\n                                    expandableRows\r\n                                    expandableRowDisabled={row => row.disabled}\r\n                                    expandableRowsComponent={ <ExpandedTable filterOnlyStock={ false }/> }\r\n                                />\r\n                        </div>\r\n                    : <div></div>   \r\n                }\r\n                {/* </div> */}\r\n                {/* <div className=\"col-6\"> */}\r\n                {\r\n                    (personasVariasCitys.length !== 0)\r\n                    ?    <div className=\"table-responsive table-repeat\" style={{padding:\"10px\", maxWidth:\"600px\"}}>\r\n                            <DataTable\r\n                                columns={ columns }\r\n                                data = { personasVariasCitys }\r\n                                title='Máquinas asignadas en diferentes ciudades'\r\n                                pagination\r\n                                paginationComponentOptions={ paginationOpciones }\r\n                                fixedHeader\r\n                                fixedHeaderScrollHeight='600px'\r\n                                customStyles={customStyles}\r\n                                dense\r\n                                expandableRows\r\n                                expandableRowDisabled={row => row.disabled}\r\n                                expandableRowsComponent={ <ExpandedTable  filterOnlyStock={ false } /> }\r\n                            />\r\n                        </div>\r\n                    : <div></div>\r\n                }\r\n                {/* </div> */}\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nimport { customStyles, paginationOpciones } from '../../utils/stylesTable';\r\nimport { ExpandedTable } from './ExpandedTable';\r\n\r\nexport const TableStock = () => {\r\n    const { paisElegido, personasAsig } = useSelector(state => state.ui);\r\n    const [dataPer, setDataPer] = useState([]);\r\n    const [personasVariasCitys, setPersonasVariasCitys] = useState([]);\r\n    useEffect(() => {\r\n        if( paisElegido.length > 0 && personasAsig.length > 0){\r\n            let person = [];\r\n            let personsVariasCitys = [];\r\n            personasAsig.forEach((user_id)=>{\r\n                let codigosCity = new Set();\r\n                let name = '';\r\n                const auxDatos = paisElegido.filter(({User_ID, Operational_status})=> User_ID === user_id && Operational_status === 'In stock');\r\n                if(auxDatos.length > 0){\r\n                    name = auxDatos[0]['Assigned_to']\r\n                    auxDatos.forEach(({Location})=>{\r\n                        codigosCity.add(Location)\r\n                    });\r\n                    if(codigosCity.size > 1){\r\n                        for(let codigoCity of codigosCity){\r\n                            const auxDato2 = paisElegido.filter(({User_ID, Operational_status,Location})=> User_ID === user_id && Operational_status === 'In stock' && Location === codigoCity);\r\n                            const datoPerson = {\r\n                                cont: auxDato2.length,\r\n                                name,\r\n                                user_id,\r\n                                Location: codigoCity\r\n                            }\r\n                            personsVariasCitys = [...personsVariasCitys, datoPerson];\r\n                        }\r\n                    }else{\r\n                        const datoPerson = {\r\n                            cont: auxDatos.length,\r\n                            name,\r\n                            user_id,\r\n                            Location: Array.from(codigosCity)[0],\r\n                        }\r\n                        person = [...person, datoPerson];\r\n                    }\r\n                }\r\n            });\r\n            setDataPer(person);\r\n            setPersonasVariasCitys(personsVariasCitys);\r\n        }\r\n    }, [paisElegido, personasAsig]);\r\n    const columns = [\r\n        {\r\n            name: 'Número de PCS',\r\n            selector:'cont',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User id',\r\n            selector:'user_id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Nombre',\r\n            selector:'name',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Código ciudad',\r\n            selector:'Location',\r\n            sortable: true,\r\n        },\r\n       \r\n    ]\r\n    return (\r\n       \r\n        <div className=\"row cont-table-repeat\">\r\n        {\r\n            (dataPer.length !== 0)\r\n            ?  <div className=\"table-responsive table-repeat\" style={{padding:\"10px\", maxWidth:\"600px\"}}>\r\n                        <DataTable\r\n                            columns={ columns }\r\n                            data = { dataPer }\r\n                            title='Máquinas en Stock'\r\n                            pagination\r\n                            paginationComponentOptions={ paginationOpciones }\r\n                            fixedHeader\r\n                            fixedHeaderScrollHeight='600px'\r\n                            customStyles={customStyles}\r\n                            dense\r\n                            expandableRows\r\n                            expandableRowDisabled={row => row.disabled}\r\n                            expandableRowsComponent={ <ExpandedTable filterOnlyStock={ true }/> }\r\n                        />\r\n                </div>\r\n            : <div></div>   \r\n        }\r\n        {\r\n            (personasVariasCitys.length !== 0)\r\n            ?    <div className=\"table-responsive table-repeat\" style={{padding:\"10px\", maxWidth:\"600px\"}}>\r\n                    <DataTable\r\n                        columns={ columns }\r\n                        data = { personasVariasCitys }\r\n                        title='Máquinas asignadas en diferentes ciudades'\r\n                        pagination\r\n                        paginationComponentOptions={ paginationOpciones }\r\n                        fixedHeader\r\n                        fixedHeaderScrollHeight='600px'\r\n                        customStyles={customStyles}\r\n                        dense\r\n                        expandableRows\r\n                        expandableRowDisabled={row => row.disabled}\r\n                        expandableRowsComponent={ <ExpandedTable filterOnlyStock={ true }/> }\r\n                    />\r\n                </div>\r\n            : <div></div>\r\n        }\r\n    </div>\r\n       \r\n    )\r\n}\r\n","import React from 'react';\r\n\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { types } from '../../types/types';\r\nimport { TableModelId } from './TableModelId';\r\nimport { TableRepeat } from './TableRepeat';\r\nimport { TableStock } from './TableStock';\r\n\r\nexport const TableAdmin = () => {\r\n    // Asset: \"MXL0261C22 - HEWLETT-PACKARD CO ELITE 8000 SFF\"\r\n    // Assigned to: \"\"\r\n    // Location: \"AE07\"\r\n    // Manufacturer: \"HP\"\r\n    // Name: \"AE17DT0261C22\"\r\n    // Operational status: \"Retired\"\r\n    // Schedule: \"\"\r\n    // Serial number: \"MXL0261C22\"\r\n    // Substatus: \"Scrapped\"\r\n    // Support group: \"\"\r\n    const dispatch = useDispatch();\r\n    console.log('table');\r\n    const perAsig = useSelector(state => state.pe);\r\n    const {dataUi, nombrePais, paisElegido} = useSelector(state => state.ui);\r\n    const changePais = (index)=>{\r\n        const actionDataCompleta = {\r\n            type: types.data,\r\n            payload: {\r\n                data: {\r\n                    dataUi,\r\n                    nombrePais: dataUi[index]['sheetName'],\r\n                    paisElegido: dataUi[index]['data'],\r\n                    personasAsig: perAsig[index]['data']\r\n                }\r\n            }\r\n        }\r\n        dispatch(actionDataCompleta);\r\n    }\r\n    return (\r\n        <>  \r\n            <div className=\"cont-paises\">\r\n                {\r\n                    \r\n                    dataUi.map((pais,index) =>(\r\n                        <button\r\n                            className=\"btn btn-primary\"\r\n                            style={{marginRight: \"2px\"}}\r\n                            key={ index }\r\n                            onClick={() => changePais(index)}\r\n                        >\r\n                            { pais['sheetName'] }\r\n                        </button>\r\n                    ))\r\n                }\r\n            </div>\r\n            {\r\n                (paisElegido.length !== 0)? <div className=\"title-report\">{`Reporte ${ nombrePais }`}</div> : <div></div>\r\n            }\r\n            {/* {\r\n                 (paisElegido.length !== 0)\r\n                 ?  <div className=\"table-responsive\" style={{padding:\"10px\"}}>\r\n                            <DataTable\r\n                                columns={ columns }\r\n                                // data = {  (dataUi['0'] != undefined)? dataUi['0']['data'] : [] }\r\n                                data = {  paisElegido }\r\n                                title='Moreno'\r\n                                pagination\r\n                                paginationComponentOptions={ paginationOpciones }\r\n                                fixedHeader\r\n                                fixedHeaderScrollHeight='600px'\r\n                                customStyles={customStyles}\r\n                            \r\n                            />\r\n                    </div>\r\n                : <div></div>\r\n            } */}\r\n            <TableRepeat/>\r\n            <TableStock/>\r\n            <TableModelId/>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { InputFile } from '../../common/inputFile/InputFile';\r\nimport { TableAdmin } from '../../common/TableAdmin';\r\n\r\n\r\nexport const HomeScreen = () => {\r\n    \r\n    console.log(\"HomeScreen\");\r\n    return (\r\n        <div>\r\n            <div className=\"cont-inputFile-HS\">\r\n                <InputFile/>\r\n            </div>\r\n            <TableAdmin />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setData } from '../../../actions/uifActions';\r\nimport { selectArchiveF } from '../../../actions/uiFiltro';\r\nimport { customStyles, paginationOpciones } from '../../../utils/stylesTable';\r\nimport { BtnFile } from '../../common/btnFile/BtnFile';\r\n\r\n\r\nexport const HomeFiltro = () => {\r\n    const archivoSelect = useSelector(state => state.uif);\r\n    const { dataUi } = useSelector(state => state.ui);\r\n    const [data_filtro, setData_filtro] = useState([]);\r\n    const dataFiltro = useSelector(state => state.uifd);\r\n    const dispatch= useDispatch();\r\n    const handleFileLoad = (e)=>{\r\n        if (e.target.files.length > 0) {\r\n            dispatch(setData(e));\r\n            const nameAux = e.target.files[0].name;\r\n            dispatch(selectArchiveF(nameAux, '','cambiar archivo'));\r\n        }\r\n    }\r\n    useEffect(\r\n        () => {\r\n           if(dataFiltro['dataUif'][0] !== undefined && dataUi.length !== 0){\r\n            //    console.log(dataFiltro['dataUif'][0]['data'])\r\n                let data_asig_incorrect = [];\r\n                dataUi.forEach(pais => \r\n                    pais['data'].forEach(elemen => {\r\n                        //WKSOPS_Username,Service_Tag\r\n                        //Serial_number,User_ID\r\n                        const pc = dataFiltro['dataUif'][0]['data'].filter(({WKSOPS_Username,Service_Tag})=> Service_Tag.toString().toUpperCase() === elemen['Serial_number'].toUpperCase() && WKSOPS_Username.toString().toUpperCase() !== elemen['User_ID'].toUpperCase() && (elemen['Operational_status'] === 'In use' || elemen['Operational_status'] === 'In stock'));\r\n                        if(pc.length !== 0){\r\n                            const dato = {\r\n                                name_pais: pais['sheetName'],\r\n                                serial_n: elemen['Serial_number'],\r\n                                user_id: elemen['User_ID'],\r\n                                user_id_filtro: pc[0]['WKSOPS_Username']\r\n                            }\r\n                            data_asig_incorrect=[...data_asig_incorrect, dato];\r\n                        } \r\n                        //console.log(elemen['Serial_number'],elemen['User_ID'],'-------',pc[0]['Service_Tag'],pc[0]['WKSOPS_Username'])\r\n                    })\r\n                )\r\n                setData_filtro(data_asig_incorrect);\r\n                // console.log(data_asig_incorrect); \r\n           }\r\n        },\r\n        [dataFiltro,dataUi],\r\n    )\r\n    const columns = [\r\n        {\r\n            name: 'País',\r\n            selector:'name_pais',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'Serial number',\r\n            selector:'serial_n',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User id 1',\r\n            selector:'user_id',\r\n            sortable: true,\r\n        },\r\n        {\r\n            name: 'User id 2',\r\n            selector:'user_id_filtro',\r\n            sortable: true,\r\n        },\r\n       \r\n    ]\r\n    return (\r\n        <div>\r\n             <div className=\"cont-inputFile-HS\">\r\n                <BtnFile \r\n                    archivoSelect = {archivoSelect}\r\n                    handleFileLoad = {handleFileLoad}\r\n                />\r\n            </div>\r\n            <div className=\"row cont-table-repeat\">\r\n                {\r\n                    (data_filtro.length !== 0)\r\n                    ? <div className=\"table-responsive table-repeat\" style={{padding:\"10px\", maxWidth:\"600px\"}}>\r\n                        <DataTable\r\n                            columns={columns}\r\n                            data={data_filtro}\r\n                            title=\"Máquina asignada a diferentes usuarios\"\r\n                            pagination\r\n                            paginationComponentOptions={ paginationOpciones }\r\n                            fixedHeader\r\n                            fixedHeaderScrollHeight='600px'\r\n                            customStyles={customStyles}\r\n                            dense\r\n                            // expandableRows\r\n                            // expandableRowDisabled={row => row.disabled}\r\n                            // expandableRowsComponent={ <ExpandedTable filterOnlyStock={ false }/> }\r\n                        />\r\n                      </div>   \r\n                    : <div></div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nimport XLSX from 'xlsx';\r\nimport { types } from \"../types/types\";\r\n\r\nexport const setData=(e)=>{\r\n        return async (dispatch)=>{\r\n            let dataJson = [];\r\n            try {\r\n                let file = e.target.files[0];\r\n                let reader = new FileReader();\r\n                reader.readAsArrayBuffer(file);\r\n                reader.onloadend = (e)=>{\r\n                    const data  = new Uint8Array(e.target.result);\r\n                    const worKbook =  XLSX.read(data, {type: \"array\"});\r\n                    worKbook.SheetNames.forEach((sheetName)=>{\r\n                        let namePerson = [];\r\n                        const dJson = XLSX.utils.sheet_to_json(worKbook.Sheets[sheetName]);\r\n                        const formatDJson = dJson.map((element)=>{\r\n                            if(element['Assigned to'] !== '')\r\n                                namePerson = [...namePerson,element['User ID']];\r\n                            return {\r\n                                WKSOPS_Username: element['WKSOPS_Username'],\r\n                                Service_Tag: element['Service_Tag'],\r\n                                WKSOPS_LIDCode: element['WKSOPS_LIDCode'],\r\n                            }\r\n                        });\r\n                        const json = {\r\n                            data: formatDJson\r\n                        }\r\n                        dataJson = [...dataJson,json];\r\n                    })\r\n                    const actionDataCompleta = {\r\n                        type: types.dataUif,\r\n                        payload: {\r\n                            data: {\r\n                                dataUif:dataJson,\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch(actionDataCompleta);\r\n                }\r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n}\r\n\r\nexport const cleanData= ()=>{\r\n    return async(dispatch)=>{\r\n        const actioClean = {\r\n            type: types.cleanData,\r\n        }\r\n        dispatch(actioClean)\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const selectArchiveF=(nombre, fileSelect, estado)=>{\r\n    return async(dispatch)=>{\r\n        const actionSelectArchive ={\r\n            type: types.filtro,\r\n            payload: {\r\n                data: {\r\n                    nombre,\r\n                    fileSelect,\r\n                    estado\r\n                }\r\n            }\r\n        }\r\n        dispatch(actionSelectArchive);\r\n    }\r\n}","import React, { useCallback, useLayoutEffect } from 'react';\r\nimport {Chart, registerables} from 'chart.js'\r\nChart.register(...registerables);\r\nlet myChartInUse;\r\n\r\nexport const GraficoBarrasInUse = ({ data, namesLabels }) => {\r\n    const createGrafica = useCallback(\r\n        () => {\r\n            const ctx = document.getElementById('myChartInUse');\r\n            if (typeof myChartInUse !== \"undefined\") myChartInUse.destroy();\r\n            myChartInUse = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: namesLabels,\r\n                    datasets: [{\r\n                        label: 'cantidad',\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        [data, namesLabels],\r\n    )\r\n    useLayoutEffect(() => {\r\n        createGrafica();\r\n    }, [data, createGrafica])\r\n    return (\r\n        <canvas id=\"myChartInUse\"  height=\"150\"></canvas>\r\n    )\r\n}\r\n","import React, { useCallback, useLayoutEffect } from 'react';\r\nimport {Chart, registerables} from 'chart.js'\r\nChart.register(...registerables);\r\nlet myChartMis;\r\n\r\nexport const GraficoBarrasMissing = ({ data, namesLabels }) => {\r\n    const createGrafica = useCallback(\r\n        () => {\r\n            const ctx = document.getElementById('myChartMissing');\r\n            if (typeof myChartMis !== \"undefined\") myChartMis.destroy();\r\n            myChartMis = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: namesLabels,\r\n                    datasets: [{\r\n                        label: 'cantidad',\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        [data, namesLabels],\r\n    )\r\n    useLayoutEffect(() => {\r\n        createGrafica();\r\n    }, [data, createGrafica])\r\n    return (\r\n        <canvas id=\"myChartMissing\"  height=\"150\"></canvas>\r\n    )\r\n}\r\n","import React, { useCallback, useLayoutEffect } from 'react';\r\nimport {Chart, registerables} from 'chart.js'\r\nChart.register(...registerables);\r\nlet myChartOrder;\r\n\r\nexport const GraficoBarrasOnOrder = ({ data, namesLabels }) => {\r\n    const createGrafica = useCallback(\r\n        () => {\r\n            const ctx = document.getElementById('myChartOrder');\r\n            if (typeof myChartOrder !== \"undefined\") myChartOrder.destroy();\r\n            myChartOrder = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: namesLabels,\r\n                    datasets: [{\r\n                        label: 'cantidad',\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        [data, namesLabels],\r\n    )\r\n    useLayoutEffect(() => {\r\n        createGrafica();\r\n    }, [data, createGrafica])\r\n    return (\r\n        <canvas id=\"myChartOrder\"  height=\"150\"></canvas>\r\n    )\r\n}\r\n","import React, { useCallback, useLayoutEffect } from 'react';\r\nimport {Chart, registerables} from 'chart.js'\r\nChart.register(...registerables);\r\nlet myChartStock;\r\n\r\nexport const GraficoBarrasStock = ({ data, namesLabels }) => {\r\n    const createGrafica = useCallback(\r\n        () => {\r\n            const ctx = document.getElementById('myChartStock');\r\n            if (typeof myChartStock !== \"undefined\") myChartStock.destroy();\r\n            myChartStock = new Chart(ctx, {\r\n                type: 'bar',\r\n                data: {\r\n                    labels: namesLabels,\r\n                    datasets: [{\r\n                        label: 'cantidad',\r\n                        data: data,\r\n                        backgroundColor: [\r\n                            'rgba(255, 99, 132, 0.2)',\r\n                            'rgba(54, 162, 235, 0.2)',\r\n                            'rgba(255, 206, 86, 0.2)',\r\n                            'rgba(75, 192, 192, 0.2)',\r\n                            'rgba(153, 102, 255, 0.2)',\r\n                            'rgba(255, 159, 64, 0.2)'\r\n                        ],\r\n                        borderColor: [\r\n                            'rgba(255, 99, 132, 1)',\r\n                            'rgba(54, 162, 235, 1)',\r\n                            'rgba(255, 206, 86, 1)',\r\n                            'rgba(75, 192, 192, 1)',\r\n                            'rgba(153, 102, 255, 1)',\r\n                            'rgba(255, 159, 64, 1)'\r\n                        ],\r\n                        borderWidth: 1\r\n                    }]\r\n                },\r\n                options: {\r\n                    scales: {\r\n                        y: {\r\n                            beginAtZero: true\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        },\r\n        [data, namesLabels],\r\n    )\r\n    useLayoutEffect(() => {\r\n        createGrafica();\r\n    }, [data, createGrafica])\r\n    return (\r\n        <canvas id=\"myChartStock\"  height=\"150\"></canvas>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport './tituloGraficos.css';\r\nexport const TituloGraficos = ({titulo}) => {\r\n    return (\r\n        <>\r\n            <div className=\"titulo-grafico\">\r\n                <p>{ titulo }</p>\r\n            </div>  \r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { shearchForState } from '../../../utils/shearchForState';\r\n// import { GraficoBarrasStock } from '../../common/GraficoBarrasStock';\r\n\r\nexport const Graficar = ({ filtro, GraficoComponent }) => {\r\n    const { dataUi } = useSelector(state => state.ui);\r\n    const [numForCountry, setnumForCountry] = useState({\r\n        nameLabels: [],\r\n        data: []\r\n    })\r\n    useEffect(() => {\r\n        if(dataUi.length !== 0){\r\n            const { nameLabels, data } = shearchForState(dataUi,  filtro );\r\n            setnumForCountry({\r\n                nameLabels,\r\n                data\r\n            });\r\n        }\r\n    }, [dataUi, filtro])\r\n    return (\r\n        <>\r\n            <GraficoComponent\r\n                data={numForCountry.data}\r\n                namesLabels={numForCountry.nameLabels}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","export const shearchForState = (dataUi, condicion)=>{\r\n    let nameLabels = [];\r\n    let data = []; \r\n    dataUi.forEach((dataPais)=>{\r\n        const machinesMissing = dataPais['data'].filter(({Operational_status})=> Operational_status === condicion);\r\n        nameLabels = [...nameLabels, dataPais['sheetName']];\r\n        data = [...data, machinesMissing.length];\r\n    });\r\n    return {\r\n        nameLabels,\r\n        data\r\n    }\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { GraficoBarras } from '../../common/GraficoBarras';\r\nimport { GraficoBarrasInUse } from '../../common/GraficoBarrasInUse';\r\nimport { GraficoBarrasMissing } from '../../common/GraficoBarrasMissing';\r\nimport { GraficoBarrasOnOrder } from '../../common/GraficoBarrasOnOrder';\r\nimport { GraficoBarrasStock } from '../../common/GraficoBarrasStock';\r\nimport { TituloGraficos } from '../../common/titulosGrafico.js/TituloGraficos';\r\nimport { Graficar } from './Graficar';\r\n\r\n\r\nexport const HomeGeneral = () => {\r\n    const pe = useSelector(state => state.pe);\r\n    const { dataUi } = useSelector(state => state.ui);\r\n    const [dataPeopleVariousMachines, setDataPeopleVariousMachines] = useState({\r\n        namesCountrys: [],\r\n        dataForCountry: []\r\n    });\r\n    const numbersPeopleWithVariousMachines = useCallback(\r\n        async (namesPersons,index)=>{\r\n            let cont_person  = 0; \r\n            namesPersons.forEach(userId => {\r\n                const persons = dataUi[index]['data'].filter(({User_ID, Operational_status})=> userId === User_ID && (Operational_status === 'In use' || Operational_status === 'In stock'))\r\n                if( persons.length > 1) cont_person = cont_person + 1;\r\n            });\r\n            return cont_person;\r\n        },\r\n        [dataUi],\r\n    )\r\n    useEffect(() => {\r\n        if(pe.length !== 0) {\r\n            let dataForCountry = [];\r\n            let namesCountrys = [];\r\n            pe.forEach(async (paisData, index) =>{\r\n                const res =  await numbersPeopleWithVariousMachines(paisData['data'], index);\r\n                namesCountrys = [...namesCountrys, paisData['sheetName']];\r\n                const resProcentaje = Math.round((res/paisData['data'].length)*100);\r\n                dataForCountry = [...dataForCountry, resProcentaje];\r\n                if((index + 1) === pe.length){\r\n                    setDataPeopleVariousMachines({\r\n                        namesCountrys,\r\n                        dataForCountry\r\n                    });\r\n                }\r\n            });\r\n        }\r\n\r\n    }, [pe,numbersPeopleWithVariousMachines])\r\n    return (\r\n        <div className=\"cont-graficos-general\">\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\" col-12 col-sm-10 col-md-6  col-lg-5 grafico-general\">\r\n                    <TituloGraficos\r\n                        titulo={'Porcentaje del número de personas con más de una computadora por país'}\r\n                    />\r\n                    <GraficoBarras \r\n                        data={ dataPeopleVariousMachines.dataForCountry }\r\n                        namesLabels={ dataPeopleVariousMachines.namesCountrys }\r\n                    />\r\n                </div>\r\n                <div className=\" col-12 col-sm-10 col-md-6  col-lg-5 grafico-general\">\r\n                    <TituloGraficos\r\n                        titulo={'Cantidad de computadoras extraviadas'}\r\n                    />\r\n                    <Graficar\r\n                        filtro = 'Missing'\r\n                        GraficoComponent={ GraficoBarrasMissing }\r\n                    />\r\n                </div>\r\n                <div className=\" col-12 col-sm-10 col-md-6  col-lg-5 grafico-general\">\r\n                    <TituloGraficos\r\n                        titulo={'Cantidad de computadoras en stock'}\r\n                    />\r\n                    <Graficar\r\n                        filtro= 'In stock'\r\n                        GraficoComponent={ GraficoBarrasStock }\r\n                    />\r\n                </div>\r\n                <div className=\" col-12 col-sm-10 col-md-6  col-lg-5 grafico-general\">\r\n                    <TituloGraficos\r\n                        titulo={'Cantidad de computadoras con Order-PO'}\r\n                    />\r\n                    <Graficar\r\n                        filtro= 'On order'\r\n                        GraficoComponent={ GraficoBarrasOnOrder }\r\n                    />\r\n                </div>\r\n                <div className=\" col-12 col-sm-10 col-md-6  col-lg-5 grafico-general\">\r\n                    <TituloGraficos\r\n                        titulo={'Cantidad de computadoras en Uso'}\r\n                    />\r\n                    <Graficar\r\n                        filtro= 'In use'\r\n                        GraficoComponent={ GraficoBarrasInUse }\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { NavBar } from '../components/common/navBar/NavBar';\r\n\r\nimport { HomeScreen } from '../components/views/home/HomeScreen';\r\nimport { HomeFiltro } from '../components/views/homeFiltro/HomeFiltro';\r\nimport { HomeGeneral } from '../components/views/homeGeneral/HomeGeneral';\r\n\r\nexport const HomeRouter = () => {\r\n    console.log('Home router')\r\n    return (\r\n        <div>\r\n            <NavBar/>\r\n            <Switch>\r\n                <Route exact path='/home/paises' component={ HomeScreen }/>\r\n                <Route exact path='/home/general' component={ HomeGeneral }/>\r\n                <Route exact path='/home/filtro' component={ HomeFiltro }/>\r\n                <Redirect to='/home/paises'/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { firebase } from '../firebase/firebase_config';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\nimport { Imgcarga } from '../components/common/imgCarga/Imgcarga';\r\nimport { HomeRouter } from './HomeRouter';\r\n\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const [cheking, setCheking] = useState(false);\r\n    const [isLoggedIn , setIsloggedIn] = useState(true);    \r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((user)=>{\r\n            if(user?.uid){\r\n                dispatch(login(user.uid,user.displayName))     \r\n                setIsloggedIn(true);\r\n            }else{\r\n                console.log('no hay madie logeado');\r\n                setIsloggedIn(false);\r\n            }\r\n            setCheking(false);\r\n        });\r\n    },[dispatch])\r\n    if(cheking){\r\n        return(\r\n            <>\r\n                <Imgcarga/>\r\n            </>\r\n        )\r\n    }\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <Route \r\n                        path=\"/auth\" \r\n                        component = {(props)=>(\r\n                            (isLoggedIn)\r\n                            ? (<Redirect to='/home/paises'/>) \r\n                            : (<AuthRouter {...props}/>)\r\n                        )}\r\n                    />\r\n                   <Route \r\n                        \r\n                        path=\"/\" \r\n                        component = {(props)=>(\r\n                            (isLoggedIn)\r\n                            ? (<HomeRouter {...props}/>)\r\n                            : (<Redirect to='/auth/login'/>) \r\n                        )}\r\n                    />\r\n                   <Redirect to=\"/auth/login\"/>\r\n                </Switch>\r\n            </div>       \r\n        </Router>\r\n    )   \r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst intialState = [];\r\n\r\nexport const personReducer = (state=intialState, action)=>{\r\n    switch (action.type) {\r\n        case types.personAsig:\r\n            return action.payload.data\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    dataUi: [],\r\n    nombrePais: '',\r\n    paisElegido: [],\r\n    personasAsig: []\r\n};\r\n\r\nexport const uiReducer = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.data:\r\n            return ({\r\n                dataUi: action.payload.data.dataUi,\r\n                nombrePais: action.payload.data.nombrePais,\r\n                paisElegido: action.payload.data.paisElegido,\r\n                personasAsig: action.payload.data.personasAsig\r\n            });\r\n        case types.cleanData:\r\n            return({\r\n                dataUi: [],\r\n                nombrePais: '',\r\n                paisElegido: [],\r\n                personasAsig: [] \r\n            })\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    nombre:'Ningún Archivo Seleccionado',\r\n    fileSelect: 'file',\r\n    estado: 'Seleccionar archivo'\r\n}\r\n\r\nexport const archivoElegidoReducer = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.archviselect:\r\n            return {\r\n                nombre: action.payload.data.nombre,\r\n                fileSelect: action.payload.data.fileSelect,\r\n                estado: action.payload.data.estado\r\n            }        \r\n        case types.cleanArchive:\r\n            return {\r\n                nombre:'Ningún Archivo Seleccionado',\r\n                fileSelect: 'file',\r\n                estado: 'Seleccionar archivo'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    nombre:'Ningún Archivo Seleccionado',\r\n    fileSelect: 'file',\r\n    estado: 'Seleccionar archivo'\r\n}\r\n\r\nexport const archivoFiltroReducer = (state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.filtro:\r\n            return {\r\n                nombre: action.payload.data.nombre,\r\n                fileSelect: action.payload.data.fileSelect,\r\n                estado: action.payload.data.estado\r\n            }        \r\n        case types.cleanArchive:\r\n            return {\r\n                nombre:'Ningún Archivo Seleccionado',\r\n                fileSelect: 'file',\r\n                estado: 'Seleccionar archivo'\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    dataUif: []\r\n};\r\nexport const uifReducer=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case types.dataUif:\r\n            return({\r\n                dataUif: action.payload.data.dataUif\r\n            });\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { personReducer } from '../reducers/personReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { archivoElegidoReducer } from '../reducers/archivoElegidoReducer';\r\nimport { archivoFiltroReducer } from '../reducers/archivoFiltroReducer';\r\nimport { uifReducer } from '../reducers/uifReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    pe: personReducer,\r\n    ae: archivoElegidoReducer,\r\n    uif: archivoFiltroReducer,\r\n    uifd:uifReducer\r\n});\r\nexport const store = createStore(\r\n        reducers,\r\n        composeEnhancers(\r\n            applyMiddleware(thunk)\r\n        )\r\n    );","\r\nimport { types } from '../types/types';\r\n\r\nexport const authReducer = (state={},action) => {\r\n   switch (action.type) {\r\n       case types.login:\r\n           return {\r\n               uid: action.payload.uid,\r\n               name: action.payload.displayName\r\n           }\r\n        case types.logout:\r\n           return {}\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const AppAdministrador = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { AppAdministrador } from './AppAdministrador';\r\nimport './App.css';\r\nReactDOM.render(\r\n  <AppAdministrador/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}